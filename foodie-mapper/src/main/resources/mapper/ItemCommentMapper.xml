<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuxi.mapper.ItemCommentMapper">

    <select id="queryCommentsPage" resultType="itemCommentVo">
        SELECT
            u.face AS userFace,
            u.nickname AS nickname,
            ic.created_time AS createdTime,
            ic.comment_level AS commentLevel,
            ic.content AS content,
            ic.sepc_name AS specName
        FROM
            items_comments ic
            INNER JOIN users u ON ic.user_id = u.id
        WHERE
	        ic.item_id = #{itemId}
	        <if test="commentLevel != null and commentLevel != ''">
                AND ic.comment_level = #{commentLevel}
            </if>
        LIMIT #{page}, #{pageSize}
    </select>

    <select id="queryCommentsPageCount" resultType="long">
        SELECT
            count(*)
        FROM
            items_comments ic
            INNER JOIN users u ON ic.user_id = u.id
        WHERE
            ic.item_id = #{itemId}
            <if test="commentLevel">
                AND ic.comment_level = #{commentLevel}
            </if>
    </select>

    <select id="queryCommentLevel" resultType="com.liuxi.pojo.vo.ItemCommentLevelVo">
        SELECT
            count(*) AS totalCounts,
            sum(( CASE comment_level WHEN 1 THEN 1 ELSE 0 END )) AS goodCounts,
            sum(( CASE comment_level WHEN 2 THEN 1 ELSE 0 END )) AS normalCounts,
            sum(( CASE comment_level WHEN 3 THEN 1 ELSE 0 END )) AS badCounts
        FROM
            items_comments
        WHERE
            item_id = #{itemId}
        GROUP BY
            item_id
    </select>

    <select id="queryItemCommentByUserId" resultType="itemCommentVo">
        SELECT
            ic.item_id AS itemId,
            ic.item_name AS itemName,
            ic.content AS content,
            ic.sepc_name AS specName,
            ic.created_time AS createdTime,
            ii.url AS itemImg
        FROM
            items_comments ic
            LEFT JOIN items_img ii ON ic.item_id = ii.item_id
        WHERE
            ic.user_id = #{userId}
            AND ii.is_main = 1
        ORDER BY ic.created_time DESC
        LIMIT #{page}, #{pageSize}
    </select>

    <select id="queryItemCommentByUserIdCount" resultType="int">
        SELECT
            count(*)
        FROM
            items_comments ic
            LEFT JOIN items_img ii ON ic.item_id = ii.item_id
        WHERE
            ic.user_id = #{userId}
            AND ii.is_main = 1
    </select>
</mapper>